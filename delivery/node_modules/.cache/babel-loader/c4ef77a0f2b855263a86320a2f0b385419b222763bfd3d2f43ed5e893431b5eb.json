{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from './assets/logo.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  style: {\n    \"background-color\": \"black\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Vue logo\",\n  src: _imports_0,\n  style: {\n    \"align-items\": \"center\"\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"map-container\"\n};\nconst _hoisted_4 = {\n  class: \"search-container\"\n};\nconst _hoisted_5 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\");\n  const _component_GMapMarker = _resolveComponent(\"GMapMarker\");\n  const _component_GMapMap = _resolveComponent(\"GMapMap\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_HelloWorld, {\n    msg: \"Welcome to Your Delivery App\",\n    style: {\n      \"text-align\": \"center\"\n    }\n  }), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_GMapMap, {\n    center: $setup.center,\n    zoom: $setup.zoomLevel,\n    \"map-type-id\": \"terrain\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"20rem\"\n    },\n    options: {\n      zoomControl: true,\n      mapTypeControl: true,\n      scaleControl: true,\n      streetViewControl: true,\n      rotateControl: true,\n      fullscreenControl: true\n    }\n  }, {\n    default: _withCtx(() => [$setup.center.lat !== 0 && $setup.center.lng !== 0 ? (_openBlock(), _createBlock(_component_GMapMarker, {\n      key: 0,\n      position: $setup.center,\n      draggable: true,\n      clickable: true,\n      onDragend: $setup.onMarkerDragEnd\n    }, null, 8 /* PROPS */, [\"position\", \"onDragend\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"center\", \"zoom\"])]), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Desired Location Input \"), _createElementVNode(\"input\", {\n    ref: \"locationInput\",\n    class: \"form-control\",\n    type: \"text\",\n    placeholder: \"Search for a location\",\n    onInput: _cache[0] || (_cache[0] = (...args) => $setup.onDesiredLocationChange && $setup.onDesiredLocationChange(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.returnToExactLocation && $setup.returnToExactLocation(...args)),\n    class: \"btn btn-primary\"\n  }, \" Return to Exact Location \")])]);\n}","map":{"version":3,"names":["_imports_0","style","_createElementVNode","alt","src","class","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_HelloWorld","msg","_hoisted_3","_component_GMapMap","center","$setup","zoom","zoomLevel","options","lat","lng","_createBlock","_component_GMapMarker","position","draggable","clickable","onDragend","onMarkerDragEnd","_hoisted_4","_createCommentVNode","ref","type","placeholder","onInput","_cache","args","onDesiredLocationChange","_hoisted_5","onClick","returnToExactLocation"],"sources":["/Users/nonnos/Desktop/projFinal/delivery/src/App.vue"],"sourcesContent":["<template>\n <div style=\"background-color: black;\">\n\n    <img alt=\"Vue logo\" src=\"./assets/logo.png\" style=\"align-items: center;\" />\n    <HelloWorld msg=\"Welcome to Your Delivery App\" style=\"text-align: center;\" />\n\n    <div class=\"map-container\">\n      <GMapMap\n        :center=\"center\"\n        :zoom=\"zoomLevel\"\n        map-type-id=\"terrain\"\n        style=\"width: 100%; height: 20rem;\"\n        :options=\"{\n          zoomControl: true,\n          mapTypeControl: true,\n          scaleControl: true,\n          streetViewControl: true,\n          rotateControl: true,\n          fullscreenControl: true\n        }\"\n      >\n        <GMapMarker\n          v-if=\"center.lat !== 0 && center.lng !== 0\"\n          :position=\"center\"\n          :draggable=\"true\"\n          :clickable=\"true\"\n          @dragend=\"onMarkerDragEnd\"\n        />\n      </GMapMap>\n    </div>\n\n    <div class=\"search-container\">\n      <!-- Desired Location Input -->\n      <input\n        ref=\"locationInput\"\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"Search for a location\"\n        @input=\"onDesiredLocationChange\"\n      />\n    </div>\n\n    <div class=\"button-container\">\n      <button @click=\"returnToExactLocation\" class=\"btn btn-primary\">\n        Return to Exact Location\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue';\nimport { ref, onMounted, onBeforeMount } from 'vue';\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n  },\n\n  setup() {\n    // Initialize center using localStorage or default values\n    const center = ref({\n      lat: 0, // Default to 0 for latitude\n      lng: 0, // Default to 0 for longitude\n    });\n\n    const zoomLevel = ref(10);\n\n    let google = null; // Initialize google here\n\n    const loadGoogleMapsAPI = () => {\n      return new Promise((resolve, reject) => {\n        if (window.google && window.google.maps && window.google.maps.places) {\n          google = window.google;\n          resolve();\n        } else {\n          const script = document.createElement('script');\n          script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAFp165fHH3fpXVJpV5eKV059_Ok95PLJg&libraries=places`;\n          script.defer = true;\n          script.async = true;\n\n          script.onload = () => {\n            google = window.google;\n            resolve();\n          };\n\n          script.onerror = reject;\n\n          document.head.appendChild(script);\n        }\n      });\n    };\n\n    const locationInput = ref(null);\n\n    onBeforeMount(() => {\n      loadGoogleMapsAPI();\n    });\n\n    const fetchUserLocation = () => {\n      if ('geolocation' in navigator) {\n        return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              const lat = position.coords.latitude;\n              const lng = position.coords.longitude;\n              const newCenter = { lat, lng };\n              zoomLevel.value = 20;\n              resolve(newCenter);\n            },\n            (error) => {\n              reject(error);\n            }\n          );\n        });\n      } else {\n        console.error(\"Geolocation is not supported in this browser.\");\n        return null;\n      }\n    };\n\n    const onMarkerDragEnd = (event) => {\n      const newLocation = event.latLng;\n      center.value = newLocation;\n      saveLocationToLocalStorage(newLocation);\n    };\n\n    const saveLocationToLocalStorage = (location) => {\n      const locationJSON = JSON.stringify(location);\n      localStorage.setItem('pinLocation', locationJSON);\n    };\n\n    const returnToExactLocation = () => {\n      fetchUserLocation()\n        .then((newCenter) => {\n          center.value = newCenter;\n          saveLocationToLocalStorage(center.value);\n        })\n        .catch((error) => {\n          console.error(\"Error getting user location: \" + error.message);\n        });\n    };\n\n    onMounted(() => {\n      fetchUserLocation();\n    });\n\n    const onDesiredLocationChange = () => {\n      // Ensure that the google object is available before using it\n      if (google && locationInput.value) {\n        const input = locationInput.value;\n        const autocompleteService = new google.maps.places.AutocompleteService();\n        autocompleteService.getPlacePredictions(\n          {\n            input: input.value,\n          },\n          (predictions) => {\n            if (predictions && predictions.length > 0) {\n              // Use the first prediction or handle multiple predictions as needed\n              const placeId = predictions[0].place_id;\n              fetchPlaceDetails(placeId);\n            }\n          }\n        );\n      }\n    };\n\n    const fetchPlaceDetails = (placeId) => {\n      if (google) {\n        const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n        placesService.getDetails(\n          {\n            placeId,\n          },\n          (place, status) => {\n            if (status === google.maps.places.PlacesServiceStatus.OK && place.geometry && place.geometry.location) {\n              center.value = {\n                lat: place.geometry.location.lat(),\n                lng: place.geometry.location.lng(),\n              };\n            }\n          }\n        );\n      }\n    };\n\n    return {\n      center,\n      zoomLevel,\n      returnToExactLocation,\n      onMarkerDragEnd,\n      onDesiredLocationChange,\n      locationInput,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.map-container {\n  width: 100%;\n  height: 20rem;\n}\n\n.search-container {\n  margin: 10px;\n}\n\n.button-container {\n  text-align: center;\n  margin: 10px;\n}\n</style>\n\n\n<style scoped>\n.map-container {\n  width: 100%;\n  height: 20rem;\n}\n\n.search-container {\n  margin: 10px;\n}\n\n.button-container {\n  text-align: center;\n  margin: 10px;\n}\n.dark-mode {\n    background-color: #333; /* Change this color to your preferred dark background color */\n    color: #fff; /* Change text color to contrast with the dark background */\n  }\n\n</style>\n"],"mappings":";OAGwBA,UAAuB;;;EAFzCC,KAAgC,EAAhC;IAAA;EAAA;AAAgC;gEAElCC,mBAAA,CAA2E;EAAtEC,GAAG,EAAC,UAAU;EAACC,GAAuB,EAAvBJ,UAAuB;EAACC,KAA4B,EAA5B;IAAA;EAAA;;;EAGvCI,KAAK,EAAC;AAAe;;EAyBrBA,KAAK,EAAC;AAAkB;;EAWxBA,KAAK,EAAC;AAAkB;;;;;uBAzChCC,mBAAA,CA8CO,OA9CPC,UA8CO,GA5CJC,UAA2E,EAC3EC,YAAA,CAA6EC,qBAAA;IAAjEC,GAAG,EAAC,8BAA8B;IAACV,KAA2B,EAA3B;MAAA;IAAA;MAE/CC,mBAAA,CAuBM,OAvBNU,UAuBM,GAtBJH,YAAA,CAqBUI,kBAAA;IApBPC,MAAM,EAAEC,MAAA,CAAAD,MAAM;IACdE,IAAI,EAAED,MAAA,CAAAE,SAAS;IAChB,aAAW,EAAC,SAAS;IACrBhB,KAAmC,EAAnC;MAAA;MAAA;IAAA,CAAmC;IAClCiB,OAAO,EAAE;;;;;;;;;sBASV,MAME,CALMH,MAAA,CAAAD,MAAM,CAACK,GAAG,UAAUJ,MAAA,CAAAD,MAAM,CAACM,GAAG,U,cADtCC,YAAA,CAMEC,qBAAA;;MAJCC,QAAQ,EAAER,MAAA,CAAAD,MAAM;MAChBU,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,IAAI;MACfC,SAAO,EAAEX,MAAA,CAAAY;;;2CAKhBzB,mBAAA,CASM,OATN0B,UASM,GARJC,mBAAA,4BAA+B,EAC/B3B,mBAAA,CAME;IALA4B,GAAG,EAAC,eAAe;IACnBzB,KAAK,EAAC,cAAc;IACpB0B,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,uBAAuB;IAClCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEpB,MAAA,CAAAqB,uBAAA,IAAArB,MAAA,CAAAqB,uBAAA,IAAAD,IAAA,CAAuB;oDAInCjC,mBAAA,CAIM,OAJNmC,UAIM,GAHJnC,mBAAA,CAES;IAFAoC,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEpB,MAAA,CAAAwB,qBAAA,IAAAxB,MAAA,CAAAwB,qBAAA,IAAAJ,IAAA,CAAqB;IAAE9B,KAAK,EAAC;KAAkB,4BAE/D,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}