{"ast":null,"code":"import HelloWorld from './components/HelloWorld.vue';\nimport { ref, onMounted, onBeforeMount } from 'vue';\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  },\n  setup() {\n    // Initialize center using localStorage or default values\n    const center = ref({\n      lat: 0,\n      // Default to 0 for latitude\n      lng: 0 // Default to 0 for longitude\n    });\n\n    const zoomLevel = ref(10);\n    let google = null; // Initialize google here\n\n    const loadGoogleMapsAPI = () => {\n      return new Promise((resolve, reject) => {\n        if (window.google && window.google.maps && window.google.maps.places) {\n          google = window.google;\n          resolve();\n        } else {\n          const script = document.createElement('script');\n          script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAFp165fHH3fpXVJpV5eKV059_Ok95PLJg&libraries=places`;\n          script.defer = true;\n          script.async = true;\n          script.onload = () => {\n            google = window.google;\n            resolve();\n          };\n          script.onerror = reject;\n          document.head.appendChild(script);\n        }\n      });\n    };\n    const locationInput = ref(null);\n    onBeforeMount(() => {\n      loadGoogleMapsAPI();\n    });\n    const fetchUserLocation = () => {\n      if ('geolocation' in navigator) {\n        return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(position => {\n            const lat = position.coords.latitude;\n            const lng = position.coords.longitude;\n            const newCenter = {\n              lat,\n              lng\n            };\n            zoomLevel.value = 20;\n            resolve(newCenter);\n          }, error => {\n            reject(error);\n          });\n        });\n      } else {\n        console.error(\"Geolocation is not supported in this browser.\");\n        return null;\n      }\n    };\n    const onMarkerDragEnd = event => {\n      const newLocation = event.latLng;\n      center.value = newLocation;\n      saveLocationToLocalStorage(newLocation);\n    };\n    const saveLocationToLocalStorage = location => {\n      const locationJSON = JSON.stringify(location);\n      localStorage.setItem('pinLocation', locationJSON);\n    };\n    const returnToExactLocation = () => {\n      fetchUserLocation().then(newCenter => {\n        center.value = newCenter;\n        saveLocationToLocalStorage(center.value);\n      }).catch(error => {\n        console.error(\"Error getting user location: \" + error.message);\n      });\n    };\n    onMounted(() => {\n      fetchUserLocation();\n    });\n    const onDesiredLocationChange = () => {\n      // Ensure that the google object is available before using it\n      if (google && locationInput.value) {\n        const input = locationInput.value;\n        const autocompleteService = new google.maps.places.AutocompleteService();\n        autocompleteService.getPlacePredictions({\n          input: input.value\n        }, predictions => {\n          if (predictions && predictions.length > 0) {\n            // Use the first prediction or handle multiple predictions as needed\n            const placeId = predictions[0].place_id;\n            fetchPlaceDetails(placeId);\n          }\n        });\n      }\n    };\n    const fetchPlaceDetails = placeId => {\n      if (google) {\n        const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n        placesService.getDetails({\n          placeId\n        }, (place, status) => {\n          if (status === google.maps.places.PlacesServiceStatus.OK && place.geometry && place.geometry.location) {\n            center.value = {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng()\n            };\n          }\n        });\n      }\n    };\n    return {\n      center,\n      zoomLevel,\n      returnToExactLocation,\n      onMarkerDragEnd,\n      onDesiredLocationChange,\n      locationInput\n    };\n  }\n};","map":{"version":3,"names":["HelloWorld","ref","onMounted","onBeforeMount","name","components","setup","center","lat","lng","zoomLevel","google","loadGoogleMapsAPI","Promise","resolve","reject","window","maps","places","script","document","createElement","src","defer","async","onload","onerror","head","appendChild","locationInput","fetchUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","newCenter","value","error","console","onMarkerDragEnd","event","newLocation","latLng","saveLocationToLocalStorage","location","locationJSON","JSON","stringify","localStorage","setItem","returnToExactLocation","then","catch","message","onDesiredLocationChange","input","autocompleteService","AutocompleteService","getPlacePredictions","predictions","length","placeId","place_id","fetchPlaceDetails","placesService","PlacesService","getDetails","place","status","PlacesServiceStatus","OK","geometry"],"sources":["/Users/nonnos/Desktop/projFinal/delivery/src/App.vue"],"sourcesContent":["<template>\n <div>\n\n    <img alt=\"Vue logo\" src=\"./assets/logo.png\" style=\"align-items: center;\" />\n    <HelloWorld msg=\"Welcome to Your Delivery App\" style=\"text-align: center;\" />\n\n    <div class=\"map-container\">\n      <GMapMap\n        :center=\"center\"\n        :zoom=\"zoomLevel\"\n        map-type-id=\"terrain\"\n        style=\"width: 100%; height: 20rem;\"\n        :options=\"{\n          zoomControl: true,\n          mapTypeControl: true,\n          scaleControl: true,\n          streetViewControl: true,\n          rotateControl: true,\n          fullscreenControl: true\n        }\"\n      >\n        <GMapMarker\n          v-if=\"center.lat !== 0 && center.lng !== 0\"\n          :position=\"center\"\n          :draggable=\"true\"\n          :clickable=\"true\"\n          @dragend=\"onMarkerDragEnd\"\n        />\n      </GMapMap>\n    </div>\n\n    <div class=\"search-container\">\n      <!-- Desired Location Input -->\n      <input\n        ref=\"locationInput\"\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"Search for a location\"\n        @input=\"onDesiredLocationChange\"\n      />\n    </div>\n\n    <div class=\"button-container\">\n      <button @click=\"returnToExactLocation\" class=\"btn btn-primary\">\n        Return to Exact Location\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue';\nimport { ref, onMounted, onBeforeMount } from 'vue';\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n  },\n\n  setup() {\n    // Initialize center using localStorage or default values\n    const center = ref({\n      lat: 0, // Default to 0 for latitude\n      lng: 0, // Default to 0 for longitude\n    });\n\n    const zoomLevel = ref(10);\n\n    let google = null; // Initialize google here\n\n    const loadGoogleMapsAPI = () => {\n      return new Promise((resolve, reject) => {\n        if (window.google && window.google.maps && window.google.maps.places) {\n          google = window.google;\n          resolve();\n        } else {\n          const script = document.createElement('script');\n          script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAFp165fHH3fpXVJpV5eKV059_Ok95PLJg&libraries=places`;\n          script.defer = true;\n          script.async = true;\n\n          script.onload = () => {\n            google = window.google;\n            resolve();\n          };\n\n          script.onerror = reject;\n\n          document.head.appendChild(script);\n        }\n      });\n    };\n\n    const locationInput = ref(null);\n\n    onBeforeMount(() => {\n      loadGoogleMapsAPI();\n    });\n\n    const fetchUserLocation = () => {\n      if ('geolocation' in navigator) {\n        return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              const lat = position.coords.latitude;\n              const lng = position.coords.longitude;\n              const newCenter = { lat, lng };\n              zoomLevel.value = 20;\n              resolve(newCenter);\n            },\n            (error) => {\n              reject(error);\n            }\n          );\n        });\n      } else {\n        console.error(\"Geolocation is not supported in this browser.\");\n        return null;\n      }\n    };\n\n    const onMarkerDragEnd = (event) => {\n      const newLocation = event.latLng;\n      center.value = newLocation;\n      saveLocationToLocalStorage(newLocation);\n    };\n\n    const saveLocationToLocalStorage = (location) => {\n      const locationJSON = JSON.stringify(location);\n      localStorage.setItem('pinLocation', locationJSON);\n    };\n\n    const returnToExactLocation = () => {\n      fetchUserLocation()\n        .then((newCenter) => {\n          center.value = newCenter;\n          saveLocationToLocalStorage(center.value);\n        })\n        .catch((error) => {\n          console.error(\"Error getting user location: \" + error.message);\n        });\n    };\n\n    onMounted(() => {\n      fetchUserLocation();\n    });\n\n    const onDesiredLocationChange = () => {\n      // Ensure that the google object is available before using it\n      if (google && locationInput.value) {\n        const input = locationInput.value;\n        const autocompleteService = new google.maps.places.AutocompleteService();\n        autocompleteService.getPlacePredictions(\n          {\n            input: input.value,\n          },\n          (predictions) => {\n            if (predictions && predictions.length > 0) {\n              // Use the first prediction or handle multiple predictions as needed\n              const placeId = predictions[0].place_id;\n              fetchPlaceDetails(placeId);\n            }\n          }\n        );\n      }\n    };\n\n    const fetchPlaceDetails = (placeId) => {\n      if (google) {\n        const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n        placesService.getDetails(\n          {\n            placeId,\n          },\n          (place, status) => {\n            if (status === google.maps.places.PlacesServiceStatus.OK && place.geometry && place.geometry.location) {\n              center.value = {\n                lat: place.geometry.location.lat(),\n                lng: place.geometry.location.lng(),\n              };\n            }\n          }\n        );\n      }\n    };\n\n    return {\n      center,\n      zoomLevel,\n      returnToExactLocation,\n      onMarkerDragEnd,\n      onDesiredLocationChange,\n      locationInput,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.map-container {\n  width: 100%;\n  height: 20rem;\n}\n\n.search-container {\n  margin: 10px;\n}\n\n.button-container {\n  text-align: center;\n  margin: 10px;\n}\n</style>\n\n\n<style scoped>\n.map-container {\n  width: 100%;\n  height: 20rem;\n}\n\n.search-container {\n  margin: 10px;\n}\n\n.button-container {\n  text-align: center;\n  margin: 10px;\n}\n.dark-mode {\n    background-color: #333; /* Change this color to your preferred dark background color */\n    color: #fff; /* Change text color to contrast with the dark background */\n  }\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}